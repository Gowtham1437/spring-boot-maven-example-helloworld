pipeline{
    agent{
        node{
            label 'forproof'
        }
    }

    stages{
        stage ('checkout') {
            steps{
                git changelog: false, poll: false, url: 'https://github.com/Gowtham1437/spring-boot-maven-example-helloworld.git'
            }
        }    
        stage ('maven build') {
            steps{
                sh 'mvn clean package'
            }
        } 

        stage ('docker build & push'){
            steps{
                script {
                    withCredentials([string(credentialsId: 'token', variable: 'token')]) {
                        sh 'docker login -u bobby4me -p ${token}'
}
                }
                sh 'docker build -f /root/Dockerfile -t bobby4me/devops:v5'
                sh 'docker push bobby4me/devops:v5'
            }
       
        }
    stage ('menifest checkout') {
            steps{
                git changelog: false, poll: false, url: 'https://github.com/Gowtham1437/spring-boot-maven-example-helloworld.git'
            }
        }   
    stage ('k8s cicd') {
        steps{
            script {
                withCredentials([string(credentialsId: 'k8s_token', variable: 'k8s_token')]) {
}
            }
            dir('menifests')
            sh 'kubectl --server=https://D19DD6CD7030D3B28FDEFCE4F3B1B36A.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token= "${k8s_token} apply -f deployment.yml'

                    sh 'kubectl --server=https://D19DD6CD7030D3B28FDEFCE4F3B1B36A.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token= "${k8s_token}" apply -f service.yml'
                    
                    sh 'kubectl --server=https://D19DD6CD7030D3B28FDEFCE4F3B1B36A.gr7.us-east-1.eks.amazonaws.com --insecure-skip-tls-verify --token= "${k8s_token}" rollout restart deployment/java-app-deployment'
                    
                    echo "kubernetes deployment is done"

                    sh 'kubectl get deployments'
                    sh 'kubectl get services'
            }
        }
    }
}
